{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Gaby/Desktop/PortfolioFRONTEND/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*import { ref } from '@angular/fire/storage';*/\nimport { getDownloadURL, list, ref, uploadBytes } from '@angular/fire/storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/storage\";\nexport class ImageService {\n  constructor(storage) {\n    this.storage = storage;\n    this.url = \"\";\n  }\n\n  uploadImage($event, name) {\n    const file = $event.target.files[0];\n    console.log(file);\n    const imgRef = ref(this.storage, `imagen/` + name);\n    uploadBytes(imgRef, file).then(Response => {\n      this.getImages();\n    }).catch(error => console.log(error));\n  }\n\n  getImages() {\n    var _this = this;\n\n    const imagesRef = ref(this.storage, 'imagen');\n    list(imagesRef).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (Response) {\n        for (let item of Response.items) {\n          _this.url = yield getDownloadURL(item);\n          console.log(\"La URL es: \" + _this.url);\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).catch(error => console.log(error));\n  }\n\n}\n\nImageService.ɵfac = function ImageService_Factory(t) {\n  return new (t || ImageService)(i0.ɵɵinject(i1.Storage));\n};\n\nImageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImageService,\n  factory: ImageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AACA;AACA,SAAiBA,cAAjB,EAAgCC,IAAhC,EAAqCC,GAArC,EAA0CC,WAA1C,QAA6D,uBAA7D;;;AAKA,OAAM,MAAOC,YAAP,CAAmB;EAIvBC,YAAoBC,OAApB,EAAoC;IAAhB;IAFpB,WAAc,EAAd;EAEyC;;EAElCC,WAAW,CAACC,MAAD,EAAcC,IAAd,EAA0B;IAC1C,MAAMC,IAAI,GAAGF,MAAM,CAACG,MAAP,CAAcC,KAAd,CAAoB,CAApB,CAAb;IACAC,OAAO,CAACC,GAAR,CAAYJ,IAAZ;IACA,MAAMK,MAAM,GAAGb,GAAG,CAAC,KAAKI,OAAN,EAAe,YAAWG,IAA1B,CAAlB;IACAN,WAAW,CAACY,MAAD,EAASL,IAAT,CAAX,CACCM,IADD,CACMC,QAAQ,IAAE;MAAE,KAAKC,SAAL;IAAiB,CADnC,EAECC,KAFD,CAEOC,KAAK,IAAIP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAFhB;EAID;;EAEDF,SAAS;IAAA;;IACP,MAAMG,SAAS,GAAGnB,GAAG,CAAC,KAAKI,OAAN,EAAe,QAAf,CAArB;IACAL,IAAI,CAACoB,SAAD,CAAJ,CACCL,IADD;MAAA,6BACM,WAAMC,QAAN,EAAiB;QACrB,KAAI,IAAIK,IAAR,IAAgBL,QAAQ,CAACM,KAAzB,EAA+B;UAC7B,KAAI,CAACC,GAAL,SAAiBxB,cAAc,CAACsB,IAAD,CAA/B;UACAT,OAAO,CAACC,GAAR,CAAY,gBAAgB,KAAI,CAACU,GAAjC;QACD;MACF,CAND;;MAAA;QAAA;MAAA;IAAA,KAOCL,KAPD,CAOOC,KAAK,IAAIP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAPhB;EASD;;AA3BsB;;;mBAAZhB,cAAYqB;AAAA;;;SAAZrB;EAAYsB,SAAZtB,YAAY;EAAAuB,YAFX","names":["getDownloadURL","list","ref","uploadBytes","ImageService","constructor","storage","uploadImage","$event","name","file","target","files","console","log","imgRef","then","Response","getImages","catch","error","imagesRef","item","items","url","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Gaby\\Desktop\\PortfolioFRONTEND\\FrontEnd\\src\\app\\service\\image.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n/*import { ref } from '@angular/fire/storage';*/\nimport { Storage,getDownloadURL,list,ref, uploadBytes } from '@angular/fire/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  url: string = \"\";\n\n  constructor(private storage: Storage) { }\n\n  public uploadImage($event: any, name: string) {\n    const file = $event.target.files[0]\n    console.log(file);\n    const imgRef = ref(this.storage, `imagen/`+ name)\n    uploadBytes(imgRef, file)\n    .then(Response=> {this.getImages()})\n    .catch(error => console.log(error))\n    \n  }\n\n  getImages(){\n    const imagesRef = ref(this.storage, 'imagen')\n    list(imagesRef)\n    .then(async Response =>{\n      for(let item of Response.items){\n        this.url = await getDownloadURL(item);\n        console.log(\"La URL es: \" + this.url);\n      }\n    }) \n    .catch(error => console.log(error))\n\n  }\n}\n "]},"metadata":{},"sourceType":"module"}